{"version":3,"sources":["components/InputTodo.jsx","components/IncompleteTodos.jsx","App.jsx","index.js"],"names":["InputTodo","props","todoText","onChange","onClick","className","placeholder","value","onchange","onCLick","IncompleteTodos","todos","onClickComplete","onClickDelete","map","todo","index","App","useState","setTodoText","useSteta","incompleteTodos","setIncompleteTodos","event","target","newTodos","onCLickComplete","splice","rootElement","document","getElementById","createRoot","render"],"mappings":"0KAEaA,EAAY,SAACC,GACxB,IAAQC,EAAgCD,EAAhCC,SAAgCD,EAAtBE,SAAsBF,EAAZG,QAC5B,OACE,sBAAKC,UAAU,aAAY,UACzB,uBAAOC,YAAY,yBAAUC,MAAOL,EAAUM,SAAUA,WACxD,wBAAQC,QAASA,QAAQ,SAAC,mBAGhC,ECRaC,EAAkB,SAACT,GAC9B,IAAQU,EAA0CV,EAA1CU,MAAOC,EAAmCX,EAAnCW,gBAAiBC,EAAkBZ,EAAlBY,cAChC,OACE,sBAAKR,UAAU,kBAAiB,UAC9B,mBAAGA,UAAU,QAAO,SAAC,iCACrB,6BACGM,EAAMG,KAAI,SAACC,EAAMC,GAChB,OACE,sBAAgBX,UAAU,WAAU,UAClC,6BAAKU,IACL,wBAAQN,QAAS,kBAAMG,EAAgBI,EAAM,EAAC,SAAC,iBAC/C,wBAAQP,QAAS,kBAAMI,EAAcG,EAAM,EAAC,SAAC,mBAHrCD,EAMd,QAIR,ECfaE,EAAM,WACjB,MAAgCC,mBAAS,IAAG,mBAArChB,EAAQ,KAAEiB,EAAW,KAC5B,EAA8CC,SAAS,IAAG,mBAAnDC,EAAe,KAAEC,EAAkB,KAC1C,EAA0CF,SAAS,IAAG,mBAAlC,KAAkB,KAkBtC,OACE,qCACE,cAAC,EAAS,CACRlB,SAAUA,EACVM,SApBmB,SAACe,GAAK,OAAKJ,EAAYI,EAAMC,OAAOjB,MAAO,EAqB9DE,QAnBa,WACjB,GAAKP,EAAL,CACA,IAAMuB,EAAQ,sBAAOJ,GAAe,CAAEnB,IACtCoB,EAAmBG,GACnBN,EAAY,GAHS,CAIvB,IAiBI,cAAC,EAAe,CACdR,MAAOU,EACPK,gBAAiBA,gBACjBb,cAlBgB,SAACG,GACrB,IAAMS,EAAQ,YAAOJ,GACrBI,EAASE,OAAOX,EAAO,GACvBM,EAAmBG,GACnBN,EAAY,GACd,MAkBF,ECrCMS,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC,EAAG,M","file":"static/js/main.625305c4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const InputTodo = (props) => {\r\n  const { todoText, onChange, onClick } = props;\r\n  return (\r\n    <div className=\"input-area\">\r\n      <input placeholder=\"TODOを入力\" value={todoText} onchange={onchange} />\r\n      <button onCLick={onCLick}>追加</button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const IncompleteTodos = (props) => {\r\n  const { todos, onClickComplete, onClickDelete } = props;\r\n  return (\r\n    <div className=\"incomplete-area\">\r\n      <p className=\"title\">未完了のTODO</p>\r\n      <ul>\r\n        {todos.map((todo, index) => {\r\n          return (\r\n            <div key={todo} className=\"list-row\">\r\n              <li>{todo}</li>\r\n              <button onCLick={() => onClickComplete(index)}>完了</button>\r\n              <button onCLick={() => onClickDelete(index)}>削除</button>\r\n            </div>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\nimport \"./styles.css\";\nimport { InputTodo } from './components/InputTodo';\nimport { IncompleteTodos } from './components/IncompleteTodos';\n\nexport const App = () => {\n  const [todoText, setTodoText] = useState(\"\");\n  const [incompleteTodos, setIncompleteTodos] = useSteta([]);\n  const [completeTodos, setCompleteTodos] = useSteta([]);\n  \n  const onChangeTodoText = (event) => setTodoText(event.target.value);\n  \n  const onClickAdd = () => {\n    if (!todoText) return;\n    const newTodos = [...incompleteTodos, todoText];\n    setIncompleteTodos(newTodos);\n    setTodoText(\"\");\n  }\n  \n  const onClickDelete = (index) => {\n    const newTodos = [...incompleteTodos];\n    newTodos.splice(index, 1);\n    setIncompleteTodos(newTodos);\n    setTodoText(\"\"); \n  }\n  \n  return (\n    <>\n      <InputTodo \n        todoText={todoText}\n        onchange={onChangeTodoText}\n        onCLick={onClickAdd}\n      />\n      \n      <IncompleteTodos\n        todos={incompleteTodos}\n        onCLickComplete={onCLickComplete}\n        onClickDelete={onClickDelete}\n      />\n    </>\n  )\n  \n}","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { App } from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}